'use strict';

/* Controllers */

backendCtrls.controller('ActivityPlatformCtrl', ['$scope', '$routeParams', '$filter', '$http', 'Activity', 'Store', 'Brand', 'Supplier',
  function ($scope, $routeParams, $filter, $http, Activity, Store, Brand, Supplier) {
    var GS_ONSALE = 1;
    var GS_ACTIVITY = 6;

    var condition = {
      Gactivity: {
        in: [$routeParams.id]
      }
    };

    var orderBy = {
      attr: 'update_at',
      dir: 'DESC'
    };

    var setCondition = function () {
      condition = {
        Gactivity: {
          in: [$routeParams.id]
        }
      };

      if ($scope.brand && $scope.brand.id) {
        condition.Gbrand = {};

        condition.Gbrand.in = [$scope.brand];
      }

      if ($scope.supplier && $scope.supplier.id) {
        condition.Gsupplier = {};

        condition.Gsupplier.in = [$scope.supplier];
      }

      if ($scope.store && $scope.store.id) {
        condition.Gstore = {};

        condition.Gstore.in = [$scope.store];
      }
    };

    var setOrderBy = function () {
      if (typeof $scope.orderBy === 'undefined') {
        return false;
      }

      orderBy = {
        attr: $scope.orderBy.attr,
        dir: ($scope.orderDir === '') ? 'DESC' : $scope.orderDir
      }   
    };

    $http.get('/bundles/woojinbackend/js/angular-seed/app/js/goods/order_conditions.json').
      success(function (res) {
        $scope.orderBys = res;

        $scope.orderBy = $scope.orderBys[0]
      });

    $scope.stores = Store.query();
    $scope.store = {};

    $scope.suppliers = Supplier.query();
    $scope.supplier = {};

    $scope.brands = Brand.query();
    $scope.brand = {};

    $scope.orderDir = "";

    var initPost = function (barcode) {
      var post = {
        Gstatus: {
          in: [GS_ONSALE, GS_ACTIVITY]
        }
      };

      if (barcode) {
        post.Gsn = {};
        post.Gsn.in = [barcode];
      }

      return post;
    };

    var setSuccess = function (msg) {
      $scope.success = msg;
      $scope.error = null;
    };

    var setError = function (msg) {
      $scope.success = null;
      $scope.error = msg;
    };

    var _push = function () {
      var goodsPosts = [];

      for (var key in $scope.list) {
        goodsPosts.push($scope.list[key]);
      }

      $http.put(Routing.generate('api_activity_push', {id: $routeParams.id}), {goodsPost: goodsPosts})
        .success(function (res) {
          if (res.status === 'ok') {
            $scope.init();
            setSuccess('刷出活動完成!');
          }
        }).error(function (res) {
          setError('刷出活動發生錯誤!');
        });
    };

    var pull = function () {
      var goodsPosts = [];

      for (var key in $scope.list) {
        goodsPosts.push($scope.list[key]);
      }

      $http.put(Routing.generate('api_activity_pull', {id: $routeParams.id}), {goodsPost: goodsPosts})
        .success(function (res) {
          if (res.status === 'ok') {
            $scope.init();
            setSuccess('刷入活動完成!');
          }
        }).error(function (res) {
          setError('刷入活動發生錯誤!');
        });
    };

    var get = function (barcode) {
      for (var key in $scope.list) {
        if ($scope.list[key].sn === barcode) {
          return;
        }
      }

      var post = initPost(barcode);

      $http.get(Routing.generate('api_goodsPassport_filter', {
        jsonCondition: JSON.stringify(post)}))
        .success(function (goodsGroup) {
          if (goodsGroup.length === 0) {
            setError(barcode + '資料無法取得，請確認該商品是否為上架或活動狀態!');
            return;
          }

          var goods = goodsGroup[0];

          $scope.list.push({id: goods.id, sn: goods.sn});
          $scope.barcode = null;

          setSuccess(goods.sn + '資料取得成功，目前狀態為' + goods.status.name + '!');
        })
        .error(function (e) {
          console.log('error');
          setError(barcode + '資料取得發生錯誤!');
        }); 
    };

    $scope.emptyMsg = function () {
      $scope.success = null;
      $scope.error = null;
    };

    $scope.formatDate = function (date, format) {
      var format = format || 'yyyy-MM-dd';
      return $filter('date')(date, format);
    };

    $scope.init = function () {
      $scope.activity = Activity.get({id: $routeParams.id });
      $scope.soldCount = 0;
      $scope.barcode = null;
      $scope.act = 1;
      $scope.list = [];
      $scope.totalItems = 0;
      $scope.currentPage = 1;
      $scope.perPage = 10;
      $scope._query();
      $scope.query = {sn: ''};
      $scope.success = null;
      $scope.error = null;
      $scope.pageInit();
    };

    $scope.emptyMsg = function () {
      $scope.success = null;
      $scope.error = null;
    };

    $scope._query = function () {
      setCondition();
      setOrderBy();

      $http.get(Routing.generate('api_goodsPassport_filter', {jsonCondition: JSON.stringify(condition), jsonOrderBy: JSON.stringify(orderBy), page: $scope.currentPage, perPage: $scope.perPage}))
      .success(function (data) {
        $scope.goodses = data;

        for (var key in $scope.goodses) {
          if ($scope.goodses[key].status.id === 2 ) {
            $scope.soldCount ++;
          }
        }
      });
    };

    /**
     * 換頁時觸發動作，這邊是執行 query() 方法取得資料
     */
    $scope.pageChanged = function() {
      setCondition();
      setOrderBy();

      $scope._query();
    };

    $scope.setPage = function (pageNo) {
      $scope.currentPage = pageNo;
    };

    /**
     * 初始化頁籤
     */
    $scope.pageInit = function () {
      setCondition();

      $http.get(Routing.generate("api_goodsPassport_filter_count", {jsonCondition: JSON.stringify(condition)})).
        success(function (total) {
          $scope.totalItems = total;
        });
    };

    $scope.saveList = function () {
      switch ($scope.act)
      {
        case 0:
          _push();
          break;

        case 1:
          pull();
          break;

        default:
          break;
      }
    };

    $scope.removeList = function (index) {
      $scope.list.splice(index, 1);
    };

    $scope.emptyList = function () {
      var r = confirm('確定清空嘛?');
      
      return (r) ? $scope.list = [] : false;
    }

    $scope.add = function () {
      get($scope.barcode);
    };

    /**
     * 匯出檔案
     */
    $scope.export = function () {    
      setCondition();
      setOrderBy();

      window.location = Routing.generate("api_goodsPassport_export", {jsonCondition: JSON.stringify(condition)});
    };

    $scope.init();
}]);